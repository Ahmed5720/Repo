import numpy as np
import matplotlib.pyplot as plt

#define data
#x = np.array([1.33,2,3,4,5,6,7,8])
#lny = np.array([-0.474, 0.058, 0.425]) case m1 - m2 / m1
t = np.array([1.517,1.792,1.987,2.130,2.233,2.307,2.358,2.389,2.410])
x = np.array([1,2,3,4,5,6,7,8])
y = np.array([1.1,2,3,4,5,6,7,8])
v = np.array([None] * 8)
Tsigma = np.array([0.008,0.006,0.005,0.005,0.005,0.004,0.003,0.003])
Ysigma = np.array([0.008,0.006,0.005,0.005,0.005,0.004,0.003,0.003])
for i in range(len(t)-1):
    v[i] = 4.905 * ( t[i+1] - t[i])
for i in range(len(v)):
    y[i] = np.log(v[i]/v[0])
for i in range(len(v)):
    Ysigma[i] = ((6.93*Tsigma[i])/v[i]) - 0.0411
    
print ("y are" , y)
print ("ysig are", Ysigma)
for i in range(len(v)-1):
    #print("y are" , y[i])
    #print("ysig are" , Ysigma[i])
    #print("y diff is " , y[i+1] - y[i])
    #print("sigma add is" , Ysigma[i] + Ysigma[i+1])
    print("diff" ,  (Ysigma[i] + Ysigma[i+1]) - np.abs((y[i+1] - y[i])))
    #print("change > sigma?" , y[i+1] - y[i] > Ysigma[i] + Ysigma[i+1])



#then not dependent


#find line of best fit
#weights = [(1/sta)**2, (1/sta)**2, (1/sta)**2,(1/sta)**2,(1/sta)**2,(1/sta)**2,(1/sta)**2,(1/sta)**2]
a, b = np.polyfit(x , y, 1)#, w = weights, cov = True)[0]

#add points to plot
plt.scatter(x, y, s = 10, c = 'r')
plt.errorbar(x,y,yerr = Ysigma,xerr = 0,ls='none',c = 'r')
#add line of best fit to plot
plt.plot(x, a *x+b)
plt.title('Line of best fit')
plt.xlabel('i', color='#1C2833')
plt.ylabel('ln(v/v0)', color='#1C2833')
plt.legend(loc='upper left')
plt.grid()
plt.show()
